apiVersion: apps/v1
kind: Deployment
metadata:
  {{- with .Values.database }}
  name: "{{ $.Chart.Name }}-{{ .type }}-deployment"
  namespace: {{ $.Release.Namespace }}
  labels:
{{- include "common.labels" $ | indent 4 }}
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app: {{ $.Chart.Name }}
      type: {{ .type }}
  template:
    metadata:
      labels:
        app: {{ $.Chart.Name }}
        type: {{ .type }}
    spec:
      containers:
        - name: "{{ $.Chart.Name }}-{{ .type }}"
          image: "{{ .image }}:{{ .version }}"
          ports:
            - containerPort: {{ .port }}
          resources:
            limits: {{ .limits | toYaml | nindent 14 }}
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: "{{ $.Chart.Name }}-{{ .type }}-secret"
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ $.Chart.Name }}-{{ .type }}-secret"
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ $.Chart.Name }}-{{ .type }}-secret"
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: "{{ $.Chart.Name }}-{{ .type }}-data"
              mountPath: /var/lib/postgresql/data
              subPath: postgres
            - name: "{{ $.Chart.Name }}-{{ .type }}-init-script"
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: "{{ $.Chart.Name }}-{{ .type }}-data"
          persistentVolumeClaim:
            claimName: "{{ $.Chart.Name }}-{{ .type }}-pvc"
        - name: "{{ $.Chart.Name }}-{{ .type }}-init-script"
          configMap:
            name: "{{ $.Chart.Name }}-{{ .type }}-init-configmap"
  {{- end }}